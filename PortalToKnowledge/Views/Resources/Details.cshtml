@model PortalToKnowledge.Models.Resource

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Resource</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.City.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State.Abbreviation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State.Abbreviation)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zipcode.Zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zipcode.Zip)
        </dd>

    </dl>
</div>

<div>
<input id="resourceAddress" hidden value="@Model.StreetAddress@Model.City.Name@Model.State.Abbreviation" />

    <style>
        #map {
            height: 400px;
            width: 400px;    
        }
    </style>

  <div id="map"></div>
    <script>
        function findAddress() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var json = JSON.parse(this.response);

                    var glat = json.results[0].geometry.location.lat;
                    var glng = json.results[0].geometry.location.lng;

                    var map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: 43.038902, lng: -87.906474 },
                        zoom: 12
                    });
                    var marker = new google.maps.Marker({
                        position: { lat: glat, lng: glng },
                        map: map
                    })
                }
            };

            var location = document.getElementById('resourceAddress').value.replace(' ', '');
            console.log(location);
            xmlhttp.open("GET", "http://maps.googleapis.com/maps/api/geocode/json?address={" + location + "}&sensor=false", true);
            xmlhttp.send();
        };
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@Keys.GOOGLEMAPS_API_KEY&callback=findAddress"
            async defer></script>
</div>
<br />
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ResourceId }) |
    @Html.ActionLink("Back to Resources", "Index")
</p>
